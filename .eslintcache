[{"D:\\其他\\HTML\\项目\\infinity\\src\\index.js":"1","D:\\其他\\HTML\\项目\\infinity\\src\\App.js":"2","D:\\其他\\HTML\\项目\\infinity\\src\\reportWebVitals.js":"3","D:\\其他\\HTML\\项目\\infinity\\src\\http\\axios.js":"4","D:\\其他\\HTML\\项目\\infinity\\src\\http\\func.js":"5","D:\\其他\\HTML\\项目\\infinity\\src\\components\\search\\index.js":"6","D:\\其他\\HTML\\项目\\infinity\\src\\redux\\store.js":"7","D:\\其他\\HTML\\项目\\infinity\\src\\redux\\map.js":"8","D:\\其他\\HTML\\项目\\infinity\\src\\components\\search\\yinqingIconBox.js":"9","D:\\其他\\HTML\\项目\\infinity\\src\\connet\\set\\YinQingAddConnet.js":"10","D:\\其他\\HTML\\项目\\infinity\\src\\page\\Home.js":"11","D:\\其他\\HTML\\项目\\infinity\\src\\page\\LeftBox.js":"12","D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\addYinQing\\AddYinQingWrapper.js":"13","D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\header.js":"14","D:\\其他\\HTML\\项目\\infinity\\src\\connet\\set\\SetConnet.js":"15","D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\set\\SetWrapper.js":"16","D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\addYinQing\\yinqingDiy.js":"17","D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\DIYSlot.js":"18","D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\test.js":"19","D:\\其他\\HTML\\项目\\infinity\\src\\page\\Search.js":"20","D:\\其他\\HTML\\项目\\infinity\\src\\connet\\search\\indexConnet.js":"21","D:\\其他\\HTML\\项目\\infinity\\src\\components\\search\\input.js":"22"},{"size":745,"mtime":1610354986372,"results":"23","hashOfConfig":"24"},{"size":1072,"mtime":1612423138365,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1609148419374,"results":"26","hashOfConfig":"24"},{"size":917,"mtime":1610036184156,"results":"27","hashOfConfig":"24"},{"size":458,"mtime":1612800809906,"results":"28","hashOfConfig":"24"},{"size":4534,"mtime":1612799087488,"results":"29","hashOfConfig":"24"},{"size":2982,"mtime":1612803509997,"results":"30","hashOfConfig":"24"},{"size":778,"mtime":1612677204321,"results":"31","hashOfConfig":"24"},{"size":3130,"mtime":1612767613480,"results":"32","hashOfConfig":"24"},{"size":614,"mtime":1612683815988,"results":"33","hashOfConfig":"24"},{"size":1746,"mtime":1612768066255,"results":"34","hashOfConfig":"24"},{"size":833,"mtime":1612443112099,"results":"35","hashOfConfig":"24"},{"size":3096,"mtime":1612707908523,"results":"36","hashOfConfig":"24"},{"size":375,"mtime":1610627201453,"results":"37","hashOfConfig":"24"},{"size":491,"mtime":1612443130221,"results":"38","hashOfConfig":"24"},{"size":228,"mtime":1612443096139,"results":"39","hashOfConfig":"24"},{"size":351,"mtime":1612683526402,"results":"40","hashOfConfig":"24"},{"size":4572,"mtime":1612707173932,"results":"41","hashOfConfig":"24"},{"size":2440,"mtime":1612542739467,"results":"42","hashOfConfig":"24"},{"size":95,"mtime":1612677467374,"results":"43","hashOfConfig":"24"},{"size":865,"mtime":1612773820781,"results":"44","hashOfConfig":"24"},{"size":2106,"mtime":1612845727839,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1fhzh24",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\其他\\HTML\\项目\\infinity\\src\\index.js",[],["96","97"],"D:\\其他\\HTML\\项目\\infinity\\src\\App.js",["98","99"],"import logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport Home from \"./page/Home\";\nimport { connect } from \"react-redux\";\nimport { mapStateToProps, mapDispatchToProps } from \"./redux/map\";\nimport store from \"./redux/store\";\nimport axios from \"./http/axios\";\n\nfunction App(props) {\n    const { maskShow, changeMaskShow, setShow } = props;\n    //点击mask，隐藏搜索引擎选择框\n    function clickMask(e) {\n        if (setShow === \"YinQingAdd\") {\n            //隐藏侧导航栏\n            store.dispatch({ type: \"changeSetShow\", data: false });\n        } else if (!setShow) {\n            //隐藏mask\n            changeMaskShow();\n        }\n    }\n    return (\n        <div className=\"App\">\n            <Home className=\"div_home_wrapper\"></Home>\n            <div className=\"div_mask\"></div>\n            {maskShow && (\n                <div\n                    className=\"div_mask div_deepMask\"\n                    onClick={clickMask}\n                ></div>\n            )}\n        </div>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","D:\\其他\\HTML\\项目\\infinity\\src\\reportWebVitals.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\http\\axios.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\http\\func.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\components\\search\\index.js",["100"],"D:\\其他\\HTML\\项目\\infinity\\src\\redux\\store.js",["101","102"],"D:\\其他\\HTML\\项目\\infinity\\src\\redux\\map.js",["103"],"import store from \"./store\";\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        maskShow: store.maskShow,\r\n        yinqingList: store.yinqingList,\r\n        setShow: store.setShow,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeMaskShow: () => {\r\n            //value是一个函数，redux会自己去调用\r\n            dispatch({\r\n                type: \"changeMaskShow\",\r\n            });\r\n        },\r\n        DeleteYinqing: (name) => {\r\n            console.log(555);\r\n            //value是一个函数，redux会自己去调用\r\n            dispatch({\r\n                type: \"DeleteYinqing\",\r\n                name: name,\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nexport { mapStateToProps, mapDispatchToProps };\r\n","D:\\其他\\HTML\\项目\\infinity\\src\\components\\search\\yinqingIconBox.js",["104"],"D:\\其他\\HTML\\项目\\infinity\\src\\connet\\set\\YinQingAddConnet.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\page\\Home.js",["105"],"D:\\其他\\HTML\\项目\\infinity\\src\\page\\LeftBox.js",["106","107","108","109","110","111","112"],"import YinQingAddConnet from \"../connet/set/YinQingAddConnet\";\r\nimport WebsetConnet from \"../connet/set/SetConnet\";\r\n\r\nimport React, { PureComponent, useState, useEffect } from \"react\";\r\n\r\nexport default function useLeftBox({ setShow }) {\r\n    // const { setShow } = this.props;\r\n    return (\r\n        <div>\r\n            {(setShow == \"WebSet\" || setShow == \"YinQingAdd\") && (\r\n                <div className=\"div_set_wrapper\">\r\n                    {/* 设置页面--添加搜索引擎 */}\r\n                    {setShow == \"YinQingAdd\" && (\r\n                        <YinQingAddConnet></YinQingAddConnet>\r\n                    )}\r\n                    {/* 设置页面--添加页面书签 */}\r\n                    {setShow == \"WebSet\" && <WebsetConnet></WebsetConnet>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\addYinQing\\AddYinQingWrapper.js",["113","114"],"import Header from \"../header\";\r\nimport React, { PureComponent } from \"react\";\r\nimport \"../../../assets/style/set.scss\";\r\nimport YinQingDiy from \"./yinqingDiy\";\r\n\r\nclass YinQingAdd extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            labelAction: \"默认\", //标识选中\r\n        };\r\n    }\r\n\r\n    close = () => {\r\n        this.props.changeSetShow();\r\n    };\r\n    //自定义搜索引擎，点击确定\r\n    confirm_click = (formData, actionColor) => {\r\n        console.log(formData, actionColor);\r\n        const List = this.props.yinqingList;\r\n        //判断，name不能重复，因为他是map循环的key\r\n        for (var index in List) {\r\n            if (List[index].name === formData.name) {\r\n                alert(\"搜索引擎名字重复！\");\r\n                return;\r\n            }\r\n        }\r\n        //添加\r\n        this.props.addYinQing({ ...formData, actionColor });\r\n        //关闭侧导航栏\r\n        this.props.changeSetShow();\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"div_YinQingAdd_wrapper\">\r\n                <Header onClick={this.close}>\r\n                    <span>添加搜索引擎</span>\r\n                </Header>\r\n                {/*选项标签  */}\r\n                <div className=\"div_label_wrapper\">\r\n                    <div\r\n                        className={`${\r\n                            this.state.labelAction == \"默认\"\r\n                                ? \"labelAction\"\r\n                                : null\r\n                        }`}\r\n                        onClick={() => {\r\n                            this.setState({ labelAction: \"默认\" });\r\n                        }}\r\n                    >\r\n                        <span>默认</span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`${\r\n                            this.state.labelAction == \"自定义\"\r\n                                ? \"labelAction\"\r\n                                : null\r\n                        }`}\r\n                        onClick={() => {\r\n                            this.setState({ labelAction: \"自定义\" });\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        <span>自定义</span>{\" \"}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 标签页内容 */}\r\n                <div className=\"div_lavelMain_wrapper\">\r\n                    {/* 默认标签页内容 */}\r\n                    {/* 自定义标签页内容 */}\r\n                    {this.state.labelAction === \"默认\" ? (\r\n                        <div>待定</div>\r\n                    ) : (\r\n                        // 自定义\r\n                        <div className=\"div_DIY\">\r\n                            <YinQingDiy\r\n                                confirm_click={this.confirm_click}\r\n                            ></YinQingDiy>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default YinQingAdd;\r\n","D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\header.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\connet\\set\\SetConnet.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\set\\SetWrapper.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\addYinQing\\yinqingDiy.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\DIYSlot.js",["115"],"import React, { useState } from \"react\";\r\n\r\nfunction useDIY({ confirm_click }) {\r\n    const arr = [\r\n        {\r\n            color: \"red\",\r\n            action: false,\r\n        },\r\n        {\r\n            color: \"#efa738\",\r\n            action: false,\r\n        },\r\n        {\r\n            color: \"#faec63\",\r\n            action: false,\r\n        },\r\n        {\r\n            color: \"#73b364\",\r\n            action: false,\r\n        },\r\n        {\r\n            color: \"#60c0d6\",\r\n            action: false,\r\n        },\r\n        {\r\n            color: \"#57a0ee\",\r\n            action: false,\r\n        },\r\n        {\r\n            color: \"#6c4cb9\",\r\n            action: false,\r\n        },\r\n    ];\r\n    const obj = {\r\n        name: \"\",\r\n        url: \"\",\r\n    };\r\n    const [colorArr, setcolorArr] = useState(arr);\r\n    const [actionColor, setActionColor] = useState(\"#df5f47\");\r\n    const [formData, setFormData] = useState(obj);\r\n\r\n    const selectColorRef = React.createRef();\r\n    //点击切换图标颜色\r\n    function selectIconColor_click(itemColor, e) {\r\n        setActionColor(itemColor);\r\n        //先清除其他选中样式\r\n        var childrenArr = Array.from(selectColorRef.current.children);\r\n        childrenArr.forEach((item, index) => {\r\n            item.setAttribute(\r\n                \"style\",\r\n                `background-color:${colorArr[index].color}; border: 1px solid ${colorArr[index].color}`\r\n            );\r\n            item.children[0].setAttribute(\"style\", `display:none`);\r\n        });\r\n\r\n        //在设置选中演示\r\n        const div = e.currentTarget;\r\n        const children = div.children[0];\r\n        div.setAttribute(\r\n            \"style\",\r\n            `background-color:#fff; border: 1px solid ${itemColor}`\r\n        );\r\n        console.log(div);\r\n        children.setAttribute(\r\n            \"style\",\r\n            `background-color:${itemColor};display:block`\r\n        );\r\n    }\r\n\r\n    //表单双向绑定\r\n    function inputChange(type, event) {\r\n        if (type === \"name\") {\r\n            setFormData({ ...formData, name: event.target.value });\r\n        } else {\r\n            setFormData({ ...formData, url: event.target.value });\r\n        }\r\n    }\r\n    //点击确定\r\n    //循环渲染，颜色圆\r\n    const selectIconColor = colorArr.map((item, index) => {\r\n        return (\r\n            <div\r\n                className={`div_selectIconColor_item `}\r\n                style={{\r\n                    backgroundColor: item.color,\r\n                    border: `1px solid ${item.color}`,\r\n                }}\r\n                key={item.color}\r\n                onClick={(e) => selectIconColor_click(item.color, e)}\r\n            >\r\n                <i style={{ backgroundColor: item.color }}></i>\r\n            </div>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"div_diyWrapper_wrapper\">\r\n            {/* 图标 */}\r\n            <div className=\"div_DIYIcon_wrapper\">\r\n                {/* 默认是一个圆 */}\r\n                <div\r\n                    className=\"div_YinQingIcon_defaultIcon\"\r\n                    style={{ backgroundColor: actionColor }}\r\n                ></div>\r\n            </div>\r\n            {/* 编辑信息 */}\r\n            <div className=\"div_setFrom_wrapper\">\r\n                <div className=\"div_from\">\r\n                    <p>搜索引擎</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"名称\"\r\n                        value={formData.name}\r\n                        onChange={(e) => inputChange(\"name\", e)}\r\n                    />\r\n                    <p>网址</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"网站地址\"\r\n                        value={formData.url}\r\n                        onChange={(e) => inputChange(\"url\", e)}\r\n                    />\r\n                    <h2>图标</h2>\r\n                    {/* 本来有两种方式：纯色、和上传图标。但上传图标就不写了还得配置啥的式 */}\r\n                    <p>背景颜色</p>\r\n                    <div className=\"div_iconColor_wrapper\" ref={selectColorRef}>\r\n                        {selectIconColor}\r\n                    </div>\r\n                </div>\r\n                <div className=\"div_confirmButton\">\r\n                    <button\r\n                        onClick={() => confirm_click(formData, actionColor)}\r\n                    >\r\n                        确定\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default useDIY;\r\n","D:\\其他\\HTML\\项目\\infinity\\src\\components\\leftBox\\test.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\page\\Search.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\connet\\search\\indexConnet.js",[],"D:\\其他\\HTML\\项目\\infinity\\src\\components\\search\\input.js",["116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":12},{"ruleId":"122","severity":1,"message":"126","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":75,"column":46,"nodeType":"129","messageId":"130","endLine":75,"endColumn":48},{"ruleId":"131","severity":1,"message":"132","line":59,"column":17,"nodeType":"124","messageId":"133","endLine":59,"endColumn":28},{"ruleId":"127","severity":1,"message":"134","line":61,"column":31,"nodeType":"129","messageId":"130","endLine":61,"endColumn":33},{"ruleId":"122","severity":1,"message":"135","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":44,"column":35,"nodeType":"129","messageId":"130","endLine":44,"endColumn":37},{"ruleId":"122","severity":1,"message":"136","line":41,"column":17,"nodeType":"124","messageId":"125","endLine":41,"endColumn":24},{"ruleId":"122","severity":1,"message":"137","line":4,"column":17,"nodeType":"124","messageId":"125","endLine":4,"endColumn":30},{"ruleId":"122","severity":1,"message":"138","line":4,"column":32,"nodeType":"124","messageId":"125","endLine":4,"endColumn":40},{"ruleId":"122","severity":1,"message":"139","line":4,"column":42,"nodeType":"124","messageId":"125","endLine":4,"endColumn":51},{"ruleId":"127","severity":1,"message":"128","line":10,"column":23,"nodeType":"129","messageId":"130","endLine":10,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":10,"column":46,"nodeType":"129","messageId":"130","endLine":10,"endColumn":48},{"ruleId":"127","severity":1,"message":"128","line":13,"column":30,"nodeType":"129","messageId":"130","endLine":13,"endColumn":32},{"ruleId":"127","severity":1,"message":"128","line":17,"column":30,"nodeType":"129","messageId":"130","endLine":17,"endColumn":32},{"ruleId":"127","severity":1,"message":"128","line":43,"column":52,"nodeType":"129","messageId":"130","endLine":43,"endColumn":54},{"ruleId":"127","severity":1,"message":"128","line":56,"column":52,"nodeType":"129","messageId":"130","endLine":56,"endColumn":54},{"ruleId":"122","severity":1,"message":"140","line":38,"column":22,"nodeType":"124","messageId":"125","endLine":38,"endColumn":33},{"ruleId":"127","severity":1,"message":"134","line":18,"column":17,"nodeType":"129","messageId":"130","endLine":18,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":36,"column":8,"nodeType":"143","endLine":36,"endColumn":20,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'yinqingList' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'store' is defined but never used.","'setShow' is assigned a value but never used.","'PureComponent' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'setcolorArr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'jsonPWord'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [inputValue, jsonPWord]",{"range":"150","text":"151"},[1033,1045],"[inputValue, jsonPWord]"]